{"version":3,"sources":["../../../../node/src/pagination.es6"],"names":["currentPage","lastPage","maxRows","allRows","bindEvents","$","document","ready","getPagination","off","on","pageChanged","e","pageNum","Number","currentTarget","data","btn","table","pagination","totalRows","length","html","previousBtnPageItem","Math","ceil","i","pageItem","nextBtnPageItem","show","hide","removeClass","addClass","showItems","row","each","element","createPagination"],"mappings":"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","file":"pagination.js","sourcesContent":["new class pagination {\n\n    constructor() {\n        this.currentPage = 1;\n        this.lastPage = 1;\n        this.maxRows = 5;\n        this.allRows = '';\n        this.bindEvents();\n    }\n\n    bindEvents() {\n        $(document).ready(() => {\n            this.allRows = $('#jobs-table .job-row');\n            this.getPagination('#allJobs');\n\n            $('#previous-btn').off('click').on('click', () => {\n                this.pageChanged(this.currentPage - 1);\n            });\n\n            $('#next-btn').off('click').on('click', () => {\n                this.pageChanged(this.currentPage + 1);\n            });\n\n            $('.page-item a.numbered').off('click').on('click', (e) => {\n                let pageNum = Number($(e.currentTarget).data('number'));\n                this.pageChanged(pageNum);\n            });\n        });\n    }\n\n    previousBtnPageItem() {\n        let btn = `<li class=\"page-item\">`\n            + `<a class=\"page-link\" id=\"previous-btn\" aria-label=\"Previous\">`\n            + `<span aria-hidden=\"true\">&laquo;</span>`\n            + `<span class=\"sr-only\">Previous</span>`\n            + `</a></li>`;\n        return btn;\n    }\n\n    nextBtnPageItem() {\n        let btn = `<li class=\"page-item\">`\n            + `<a class=\"page-link\" id=\"next-btn\" aria-label=\"Previous\">`\n            + `<span aria-hidden=\"true\">&raquo;</span>`\n            + `<span class=\"sr-only\">Next</span>`\n            + `</a></li>`;\n        return btn;\n    }\n\n    pageItem(pageNum) {\n        let btn = `<li class=\"page-item\">`\n            + `<a class=\"page-link numbered\" data-number=\"${pageNum}\">${pageNum}</a>`\n            + `</li>`;\n        return btn;\n    }\n\n    createPagination(table) {\n        let pagination = $(`#jobs-table .pagination`);\n        let totalRows = this.allRows.length;\n        if (totalRows > this.maxRows) {\n            let html = this.previousBtnPageItem();\n            this.lastPage = Math.ceil(totalRows / this.maxRows);\n            for (let i = 1; i <= this.lastPage; i++) {\n                html += this.pageItem(i);\n            }\n            html += this.nextBtnPageItem();\n\n            pagination.html(html).show();\n        } else {\n            pagination.hide();\n        }\n    }\n\n    pageChanged(pageNum) {\n        $('.pagination .page-item a[data-number=' + this.currentPage + ']').removeClass('active');\n        this.currentPage = pageNum;\n        $('.pagination .page-item a[data-number=' + pageNum + ']').addClass('active');\n        if (this.currentPage === 1){\n            $('.pagination #previous-btn').addClass('disabled');\n        } else {\n            $('.pagination #previous-btn').removeClass('disabled');\n        }\n\n        if (this.currentPage === this.lastPage){\n            $('.pagination #next-btn').addClass('disabled');\n        } else {\n            $('.pagination #next-btn').removeClass('disabled');\n        }\n\n        this.showItems();\n    }\n\n    showItems() {\n        let row = 0;\n        this.allRows.each((i, element) => {\n            row++;\n            if (row > (this.maxRows * this.currentPage)\n                || row <= ((this.maxRows * this.currentPage) - this.maxRows)) {\n                $(element).hide();\n            } else {\n                $(element).show();\n            }\n        });\n    }\n\n    getPagination(table) {\n        this.currentPage = 1;\n\n        this.createPagination(table);\n        this.pageChanged(this.currentPage);\n\n\n        /*$('#maxRows').on('change',function(evt){\n\n            $('.pagination').find(\"li\").slice(1, -1).remove();\n            var num = 0 ;\t\t\t\t\t\t\t\t\t// reset tr counter\n            var maxRows = parseInt($(this).val());\t\t\t// get Max Rows from select option\n\n            if(maxRows == 5000 ){\n                $('.pagination').hide();\n            }else {\n                $('.pagination').show();\n            }\n\n            var totalRows = $('.job-row').length;\t\t// numbers of rows\n            $('.job-row').each(function(){\t\t\t// each TR in  table and not the header\n                num++;\t\t\t\t\t\t\t\t\t// Start Counter\n                if (num > maxRows ){\t\t\t\t\t\t// if tr number gt maxRows\n                    $(this).hide();\t\t\t\t\t\t\t// fade it out\n                }if (num <= maxRows ){\n                    $(this).show();\n                }// else fade in Important in case if it ..\n            });\t\t\t\t\t\t\t\t\t\t\t//  was fade out to fade it in\n            if (totalRows > maxRows){\t\t\t\t\t\t// if tr total rows gt max rows option\n                var pagenum = Math.ceil(totalRows/maxRows);\t// ceil total(rows/maxrows) to get ..\n                //\tnumbers of pages\n                for (var i = 1; i <= pagenum ;){\t\t\t// for each page append pagination li\n                    $('.pagination #prev').before('<li data-page=\"'+i+'\">\\\n\t\t\t\t\t\t\t\t      <span>'+ i++ +'<span class=\"sr-only\">(current)</span></span>\\\n\t\t\t\t\t\t\t\t    </li>').show();\n                }\t\t\t\t\t\t\t\t\t\t\t// end for i\n            } \t\t\t\t\t\t\t\t\t\t\t\t// end if row count > max rows\n            $('.pagination [data-page=\"1\"]').addClass('active'); // add active class to the first li\n            $('.pagination li').on('click',function(evt){\t\t// on click each page\n                evt.stopImmediatePropagation();\n                evt.preventDefault();\n                var pageNum = $(this).attr('data-page');\t// get it's number\n\n                var maxRows = parseInt($('#maxRows').val());\t\t\t// get Max Rows from select option\n\n                if(pageNum == \"prev\" ){\n                    if(lastPage == 1 ){return;}\n                    pageNum  = --lastPage ;\n                }\n                if(pageNum == \"next\" ){\n                    if(lastPage == ($('.pagination li').length -2) ){return;}\n                    pageNum  = ++lastPage ;\n                }\n\n                lastPage = pageNum ;\n                var trIndex = 0 ;\t\t\t\t\t\t\t// reset tr counter\n                $('.pagination li').removeClass('active');\t// remove active class from all li\n                $('.pagination [data-page=\"'+lastPage+'\"]').addClass('active');// add active class to the clicked\n                // $(this).addClass('active');\t\t\t\t\t// add active class to the clicked\n                $(table+' tr:gt(0)').each(function(){\t\t// each tr in table not the header\n                    trIndex++;\t\t\t\t\t\t\t\t// tr index counter\n                    // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out\n                    if (trIndex > (maxRows*pageNum) || trIndex <= ((maxRows*pageNum)-maxRows)){\n                        $(this).hide();\n                    }else {$(this).show();} \t\t\t\t//else fade in\n                }); \t\t\t\t\t\t\t\t\t\t// end of for each tr in table\n            });\t\t\t\t\t\t\t\t\t\t// end of on click pagination list\n\n        }).val(5).change();*/\n    }\n}\n"]}